@page "/dictionary"
@using ElGatoConBotas.Domain.Entities
@using ElGatoConBotas.Services
@using ElGatoConBotas.Domain.Interfaces
@inject IVocabService vocabService
@using MudBlazor
@inject IDialogService DialogService
@using ElGatoConBotas.Components.Dialogs

<h3>Dictionary</h3>
<h1>These are all the words in the database:</h1>

<MudTable Items="vocabularies" Hover="true" Bordered="true" Striped="true">
    <HeaderContent>
        <MudTh Style="width:40px">Id</MudTh>
        <MudTh>Spanish</MudTh>
        <MudTh>German</MudTh>
        <MudTh>Actions</MudTh>
    </HeaderContent>

    <RowTemplate Context="vocabulary">
        <MudTd DataLabel="Id">@vocabulary.Id</MudTd>
        <MudTd DataLabel="Spanish">@vocabulary.Spanish_Expression</MudTd>
        <MudTd DataLabel="German">@vocabulary.German_Expression</MudTd>
        <MudTd DataLabel="Actions">
            <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="() => DeleteEntry(vocabulary)">Delete</MudButton>
        </MudTd>
    </RowTemplate>
</MudTable>

<MudDialogProvider />
<MudButton @onclick="OpenDialogAsync" Variant="Variant.Filled" Color="Color.Primary">
    Edit Entry
</MudButton>

@code {
    private List<Vocabulary> vocabularies;

    protected override void OnInitialized()
    {
        try
        {
            vocabularies = vocabService.GetVocabularies();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching vocabularies: {ex.Message}");
            vocabularies = new List<Vocabulary>();
        }
    }

    private Task OpenDialogAsync()
    {
        var options = new DialogOptions();
        return DialogService.ShowAsync<MudDialog>("Edit Entry", options);
    }

    public void DeleteEntry(Vocabulary chosenVocabulary)
    {
        vocabService.RemoveVocabulary(chosenVocabulary);
        vocabularies = vocabService.GetVocabularies(); // Refresh the list after deletion
    }
}
