@page "/dictionary"
@using ElGatoConBotas.Domain.Entities
@using ElGatoConBotas.Services
@using ElGatoConBotas.Domain.Interfaces
@inject IVocabService vocabService
@using ElGatoConBotas.Components
@inject IDialogService DialogService
@using MudBlazor
@using ElGatoConBotas.Components.Dialogs

<h3>Dictionary</h3>
<h1>These are all the words in the database:</h1>

<style>
    table, th, td {
        border: 1px solid black;
        text-align: left;
        font-family: Arial;
        width: 50%;
    }
</style>

<table>
    <tr>
         
        <th>Spanish</th>
        <th>German</th>
        <th>Actions</th>
    </tr>
    @if (vocabularies != null)
    {
        @foreach (var vocabulary in vocabularies)
        {
            <tr>
                <td>@vocabulary.Spanish_Expression</td>
                <td>@vocabulary.German_Expression</td>
                <td>
                    <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="() => DeleteEntry(vocabulary)">Delete</MudButton>
                    
                 
                </td>
            </tr>
        }
    }
</table>



<MudDialogProvider />
<MudButton @onclick="OpenDialogAsync" Variant="Variant.Filled" Color="Color.Primary">
    Edit Entry
</MudButton>


@code {
    private List<Vocabulary> vocabularies;






    private Task OpenDialogAsync()
    {
        var options = new DialogOptions(); 

        return DialogService.ShowAsync<MudDialog>("Edit Entry", options);
    }
 

    public void DeleteEntry(Vocabulary chosenVocabulary)
    {
        vocabService.RemoveVocabulary(chosenVocabulary);
        vocabularies = vocabService.GetVocabularies();
    }






    protected override void OnInitialized()
    {
        try
        {
            vocabularies = vocabService.GetVocabularies();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching vocabularies: {ex.Message}");
            vocabularies = new List<Vocabulary>();
        }
    }
    

}
